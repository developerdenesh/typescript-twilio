# Adapted from https://medium.com/@alex_bormotov/creating-ci-cd-pipeline-with-github-actions-and-aws-elastic-beanstalk-e641c7884c06
name: AWS-EB_CICD

env:
  APP_S3_BUCKET_NAME: "elasticbeanstalk-ap-southeast-1-962424047474"
  APP_NAME: "notifications_flexa"
  ENV_NAME: "Notificationsflexa-env"
  DEPLOY_PKG_NAME: "github-action-notifications-app_${{ github.sha }}.zip"
  AWS_REGION_NAME: "ap-southeast-1"

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  ci_part:
    runs-on: ubuntu-20.04
    steps:
      - name: Clone this repositary
        uses: actions/checkout@v1

      #  Inspired by: https://stackoverflow.com/questions/60176044/how-do-i-use-an-env-file-with-github-actions
      - name: "Create env file"
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          ls

      - name: "Install npm modules"
        run: |
          npm i

      - name: "Tests"
        run: |
          npm test

      - name: "Build typescript files"
        run: |
          npm run build

      - name: Make zip
        run: rm *.zip | zip -r ${{ env.DEPLOY_PKG_NAME }} . -x 'node_modules/*' -x 'src/' -x '.git/*'

      - name: Config Access to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: push to S3
        run: aws s3 cp ${{ env.DEPLOY_PKG_NAME }} s3://${{ env.APP_S3_BUCKET_NAME }}/

      - name: Print msg
        run: echo "CI part is finished"

  cd_part:
    runs-on: ubuntu-latest
    needs: [ci_part]

    steps:
      - name: Config Access to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Create new App Version and deploy
        run: |
          NOW=$(date)
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.APP_NAME }} \
          --source-bundle S3Bucket="${{ env.APP_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PKG_NAME }}" \
          --version-label "Ver-${{ github.sha }}$NOW" \
          --description "SHA-${{ github.sha }}"
          aws elasticbeanstalk update-environment --environment-name ${{ env.ENV_NAME }} --version-label "Ver-${{ github.sha }}$NOW"

      - name: Print msg
        run: echo "CD part is finished"
